#	$LAAS$



#  WARNING 
#  WARNING 	DO NOT CHANGE ANYTHING IN THIS FILE
#  WARNING 	it is replaced at each module generation
#  WARNING
#  WARNING      If you want to install additional files, use the user-install
#  WARNING	target in codels/Makefile.in (see the comments in this file)
#  WARNING 


$commentbegin$
#
# Copyright (C) 1993-2005 LAAS/CNRS
# All rights reserved.
#
# Redistribution  and  use in source   and binary forms,  with or without
# modification, are permitted provided that  the following conditions are
# met:
#
#   1. Redistributions  of  source code must  retain  the above copyright
#      notice, this list of conditions and the following disclaimer.
#   2. Redistributions in binary form must  reproduce the above copyright
#      notice,  this list of  conditions and  the following disclaimer in
#      the  documentation   and/or  other  materials   provided with  the
#      distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE  AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY  EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES   OF MERCHANTABILITY AND  FITNESS  FOR  A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO  EVENT SHALL THE AUTHOR OR  CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT,  INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING,  BUT  NOT LIMITED TO, PROCUREMENT  OF
# SUBSTITUTE  GOODS OR SERVICES;  LOSS   OF  USE,  DATA, OR PROFITS;   OR
# BUSINESS  INTERRUPTION) HOWEVER CAUSED AND  ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
$commentend$

# --- paths -------------------------------------------------------------

top_builddir=  	@top_builddir@
top_srcdir=	@top_srcdir@
srcdir=		@srcdir@
builddir=     	@builddir@

INSTALL=  	@INSTALL@
VPATH=		$(srcdir)

include $(top_builddir)/config.mk
include $(top_srcdir)/$(autoconfdir)/config.$(OSAPI).mk


# --- flags -------------------------------------------------------------

CPPFLAGS+= $(ENDIANNESS) $(GENOM_DEFINES) $(GENOM_INCLUDES)
CPPFLAGS+= -I. -I$(top_srcdir) -I$(srcdir)
CPPFLAGS+= $(GENOM_CFLAGS)

# Put this BEFORE including genom.mk since genom.mk defines the regen and regen-user targets
all: dirs server client

# GenoM flags
include $(top_srcdir)/$(autoconfdir)/genom.mk


# --- source files ------------------------------------------------------

module_src= \
	$module$CntrlTask.c	\
	$module$ModuleInit.c	\
$listExecTask_c$

client_src= \
	$module$Error.c	\
	$module$Endian.c	\
	$module$Print.c		\
	$module$PrintXML.c	\
	$module$Scan.c		\
	$module$MsgLib.c	\
	$module$PosterShowLib.c	\
	$module$PosterXMLLib.c	\
	$module$PosterReadLib.c	\
	$module$PosterLib.c

client_includes = \
	server/$module$Type.h \
	server/$module$ScopeLib.h \
	server/$module$Scan.h \
	server/$module$PrintXML.h \
	server/$module$Print.h \
	server/$module$PosterXMLLib.h \
	server/$module$PosterWriteLibProto.h \
	server/$module$PosterShowLib.h \
	server/$module$PosterReadLibProto.h \
	server/$module$PosterLibStruct.h \
	server/$module$PosterLib.h \
	server/$module$MsgLib.h \
	server/$module$Error.h \
	server/$module$Endian.h \
$listIncludesInDotGen$

init_src= \
	$module$Init.c

test_src= \
	$module$Test.c

connect_src= \
	$module$ConnectLib.c

posterwrite_src= \
	$module$PosterWriteLib.c

module_obj=	$(module_src:%.c=$(OBJDIR)/%.lo)
client_obj=	$(client_src:%.c=$(OBJDIR)/%.lo)
init_obj=	$(init_src:%.c=$(OBJDIR)/%.lo)
test_obj=	$(test_src:%.c=$(OBJDIR)/%.lo)
connect_obj=	$(connect_src:%.c=$(OBJDIR)/%.lo)
posterwrite_obj=$(posterwrite_src:%.c=$(OBJDIR)/%.lo)


$genTcl$tclclient_src= \
$genTcl$	tcl/$module$Tcl.c		\
$genTcl$	$module$PosterLib.c	\
$genTcl$	$module$Endian.c  \
$genTcl$	$module$Error.c
$genTcl$tclclient_obj=	$(tclclient_src:%.c=$(OBJDIR)/%.lo)
$genTcl$
$genTcl$tclclient_tcl= \
$genTcl$	tcl/$module$Client.tcl

$genOpenprs$openprsclient_src= \
$genOpenprs$	openprs/$module$DecodeOpenprs.c \
$genOpenprs$	openprs/$module$EncodeOpenprs.c \
$genOpenprs$	openprs/$module$RequestsOpenprs.c
$genOpenprs$openprsclient_obj=$(openprsclient_src:%.c=$(OBJDIR)/%.lo)
$genOpenprs$oprsclient_headers = \
$genOpenprs$	openprs/$module$DecodeOpenprs.h \
$genOpenprs$	openprs/$module$EncodeOpenprs.h \
$genOpenprs$	openprs/$module$RequestsOpenprsProto.h
$genOpenprs$oprsclient_data = \
$genOpenprs$	openprs/$module$Openprs.inc openprs/$module$Openprs.opf openprs/$module$Openprs.sym

# --- what to do --------------------------------------------------------


dirs: $(OBJDIR)
$genTcl$dirs: $(OBJDIR)/tcl
$genOpenprs$dirs: $(OBJDIR)/openprs

$(OBJDIR):
	mkdir -p $@

$(OBJDIR)/tcl:
	mkdir -p $@

$(OBJDIR)/openprs:
	mkdir -p $@

server: $(OBJDIR)/$(MODULE_LIB)
server: $(OBJDIR)/$(INIT_BIN)
server: $(OBJDIR)/$(POSTERWRITE_LIB)

client:: $(OBJDIR)/$(TEST_BIN) $(OBJDIR)/$(CONNECT)
$genTcl$client:: $(OBJDIR)/$(TCLCLIENT_LIB)
$genOpenprs$client:: $(OBJDIR)/$(OPENPRSCLIENT_LIB)


# --- libraries ---------------------------------------------------------

$(OBJDIR)/$(MODULE_LIB): $(module_obj)
	$(LTLD) -o $@ $(LDFLAGS) $(module_obj)

$(OBJDIR)/$(POSTERWRITE_LIB): $(posterwrite_obj)
	$(LTLD) -o $@ $(LDFLAGS) $(posterwrite_obj)

ifeq ($(ABI_VERSION_INFO),)
LIBTOOL_VERSION_INFO = -avoid-version
else
LIBTOOL_VERSION_INFO = -version-info $(ABI_VERSION_INFO)
endif

$(OBJDIR)/$(CLIENT_LIB): $(client_obj)
	$(LTLD) -o $@ $(LDFLAGS) $(client_obj) $(SERVERS_CLIENT_LIB) \
		$(LIBTOOL_LINKOPT) $(GENOM_LIBS) $(LIBTOOL_VERSION_INFO)

$genTcl$$(OBJDIR)/$(TCLCLIENT_LIB): $(tclclient_obj)
$genTcl$	$(LTLD) $(CFLAGS) $(tclclient_obj) $(SERVERS_ENDIAN_LIB) -o $@	\
$genTcl$		$(LIBTOOL_LINKOPT) $(GENOM_LIBS)			\
$genTcl$		$(LDFLAGS) $(TCL_LDFLAGS) $(LIBTOOL_VERSION_INFO)

$genOpenprs$$(OBJDIR)/$(OPENPRSCLIENT_LIB): $(openprsclient_obj)
$genOpenprs$	$(LTLD) $(CFLAGS) $(openprsclient_obj) $(SERVERS_ENDIAN_LIB) -o $@ \
$genOpenprs$		$(LIBTOOL_LINKOPT) $(GENOM_LIBS) $(LDFLAGS) $(LIBTOOL_VERSION_INFO)


# --- binaries ----------------------------------------------------------

$(OBJDIR)/$(INIT_BIN): $(init_obj) $(OBJDIR)/$(CLIENT_LIB)
	$(LTLD) $(CFLAGS) $(init_obj) -o $@ $(LDFLAGS)	\
		$(LIBTOOL_LINKOPT) $(LTLK_CLIENT_LIB)	\
		$(SERVERS_CLIENT_LIB) $(GENOM_LIBS)

$(OBJDIR)/$(TEST_BIN): $(test_obj) $(OBJDIR)/$(CLIENT_LIB)
	$(LTLD) $(CFLAGS) $(test_obj) -o $@  $(LDFLAGS) 	\
		$(LIBTOOL_LINKOPT) $(LTLK_CLIENT_LIB)		\
		$(SERVERS_CLIENT_LIB) $(GENOM_LIBS)


# --- basic rules -------------------------------------------------------

$genTcl$$(tclclient_obj): $(OBJDIR)/%.lo: %.c
$genTcl$	$(LTCC) -c $(CPPFLAGS) $(TCL_CPPFLAGS) -DDATADIR='"$(datadir)"' \
$genTcl$		$(CFLAGS) -o $@ $<  $(LIBTOOL_COPT)

$genOpenprs$$(openprsclient_obj): $(OBJDIR)/%.lo: %.c
$genOpenprs$	$(LTCC) -c $(CPPFLAGS) $(TRANSGEN_CFLAGS) \
$genOpenprs$		$(CFLAGS) -o $@ $<  $(LIBTOOL_COPT)

$(OBJDIR)/%.lo: %.c
	$(LTCC) -c $(CPPFLAGS) $(CFLAGS) -o $@ $< $(LIBTOOL_COPT)


# --- install -----------------------------------------------------------

.PHONY: install install-bin install-data

install: all install-bin install-data

# Install libraries first
install-bin:
	$(MKINSTALLDIRS) $(libdir)
	$(LTINSTALL) $(OBJDIR)/$(CLIENT_LIB) $(libdir)/$(CLIENT_LIB)
	$genTcl$$(MKINSTALLDIRS) $(libdir)/tclserv
	$genTcl$$(LTINSTALL) $(OBJDIR)/$(TCLCLIENT_LIB) $(libdir)/tclserv/$(TCLCLIENT_LIB)
	$genOpenprs$$(MKINSTALLDIRS) $(libdir)/openprs
	$genOpenprs$$(LTINSTALL) $(OBJDIR)/$(OPENPRSCLIENT_LIB) $(libdir)/openprs/$(OPENPRSCLIENT_LIB)
	$(MKINSTALLDIRS) $(bindir)
	$(LTINSTALL) $(OBJDIR)/$(INIT_BIN) $(bindir)/$(INIT_BIN)
	$(LTINSTALL) $(OBJDIR)/$(TEST_BIN) $(bindir)/$(TEST_BIN)

install-data:
	$(MKINSTALLDIRS) $(includedir)/server
	@for f in $(client_includes); do \
		$(INSTALL_DATA) $(top_srcdir)/$$f $(includedir)/$$f;\
	done
	$(MKINSTALLDIRS) $(datadir)/gen
	$(INSTALL_DATA) $(top_srcdir)/$(GENFILE) $(datadir)/gen
	$genTcl$$(MKINSTALLDIRS) $(datadir)/tcl
	$genTcl$$(INSTALL_DATA) $(srcdir)/$(tclclient_tcl) $(datadir)/$(tclclient_tcl)
	$genOpenprs$$(MKINSTALLDIRS) $(datadir)/openprs
	$genOpenprs$( cd $(srcdir) && $(INSTALL_DATA) $(oprsclient_data) $(datadir)/openprs )
	$genOpenprs$$(MKINSTALLDIRS) $(includedir)/server/openprs
	$genOpenprs$( cd $(srcdir) && $(INSTALL_DATA) $(oprsclient_headers) $(includedir)/server/openprs )


# --- clean -------------------------------------------------------------

.PHONY: clean

CLEAN_FILES = \
    $(module_obj) $(OBJDIR)/$(MODULE_LIB) \
    $(posterwrite_obj) $(OBJDIR)/$(POSTERWRITE_LIB) \
    $(client_obj) $(OBJDIR)/$(CLIENT_LIB) \
    $(connect_obj) \
    $(init_obj) $(OBJDIR)/$(INIT_BIN) \
    $(test_obj) $(OBJDIR)/$(TEST_BIN)

$genTcl$CLEAN_FILES += $(tclclient_obj) $(OBJDIR)/$(TCLCLIENT_LIB)
$genOpenprs$CLEAN_FILES += $(openprsclient_obj) $(OBJDIR)/$(OPENPRSCLIENT_LIB)

clean:
	$(LTRM) $(CLEAN_FILES)
	rm -f $(OBJDIR)/dependencies
	-if test -d $(OBJDIR); then rmdir $(OBJDIR); fi

distclean: clean
	rm -f Makefile


# --- dependencies ------------------------------------------------------

.PHONY: depend

make_depend=\
  $(MKDEP) -c"$(CC)" -o$(OBJDIR)/dependencies -d$(OBJDIR) -t.lo $(CPPFLAGS)

ifeq ($(findstring clean,$(MAKECMDGOALS)),)
depend $(OBJDIR)/dependencies:: $(OBJDIR);

depend $(OBJDIR)/dependencies:: $(module_src) $(posterwrite_src)
	$(make_depend) $?
depend $(OBJDIR)/dependencies::  $(client_src) $(connect_src)
	$(make_depend) $?
depend $(OBJDIR)/dependencies::  $(test_src)
	$(make_depend) $?

$genTcl$depend $(OBJDIR)/dependencies:: $(tclclient_src)
$genTcl$	$(make_depend) $(TCL_CPPFLAGS) $?

$genOpenprs$depend $(OBJDIR)/dependencies:: $(openprsclient_src)
$genOpenprs$	@$(make_depend) $(TRANSGEN_CFLAGS) $?

-include $(OBJDIR)/dependencies
endif

