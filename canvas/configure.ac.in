dnl	$LAAS$
dnl
dnl configure.ac --
dnl	process this file with autoconf to produce a configure script.
dnl
AC_REVISION($LAAS$)

AC_INIT($module$, $version$, $email$)
AC_CONFIG_AUX_DIR(autoconf)

AC_CANONICAL_HOST

dnl --- checks for programs ---------------------------------------------
dnl
USE_CXX=$use_cxx$
AC_SUBST(USE_CXX)

AC_PROG_CC
if test "x$USE_CXX" = "x1"; then
    AC_PROG_CXX
fi

AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

ROBOT_CFLAGS
CFLAGS="${C_DEBUG_FLAGS} ${C_WARNING_FLAGS}"

ROBOT_PROG_MKDEP

dnl Checks for headers --------------------------------------------------
dnl
AC_CHECK_HEADERS(sys/cdefs.h)

AC_C_BIGENDIAN([ENDIANNESS=-DWORDS_BIGENDIAN], [ENDIANNESS=])
AC_SUBST(ENDIANNESS)


dnl --- RTAI support ----------------------------------------------------
dnl

# configure options
AC_ARG_WITH(rtai,
           AC_HELP_STRING([--with-rtai=yes|no],
               [configure to use RTAI]),
           [opt_rtai=$withval],[opt_rtai=no])
AC_ARG_WITH(rtai-includes,
           AC_HELP_STRING([--with-rtai-includes=DIR],
               [RTAI headers are in DIR]),
           [opt_rtai_includes=$withval])
AC_ARG_WITH(kernel-includes,
           AC_HELP_STRING([--with-kernel-includes=DIR],
               [linux kernel headers are in DIR]),
           [opt_kernel_includes=$withval])

# make related stuff
if test "x$opt_rtai" = "xyes"; then
   OSAPI=rtai
   AC_MSG_RESULT([Configuring to use RTAI])
   AC_CHECK_RTAI_INCLUDES(RTAI_INC, $opt_rtai_includes)
   AC_CHECK_LINUXKERNEL_INCLUDES(KERNEL_INC, $opt_kernel_includes)

elif test "x$opt_rtai" = "xno"; then :
   OSAPI=posix
   AC_MSG_RESULT([Configuring to use POSIX])
else
   AC_MSG_ERROR([invalid option --with-rtai=$opt_rtai], 2)
fi
AC_SUBST(OSAPI)


dnl --- checks for functions --------------------------------------------
dnl

LIBS=
AC_SEARCH_LIBS([fabs], [m])
AC_SEARCH_LIBS([atan], [m])
AC_SUBST(LIBMATH, "${LIBS}")


dnl --- checks for libraries --------------------------------------------
dnl

dnl Pocolibs
PKG_CHECK_MODULES(POCOLIBS, pocolibs >= 2.0)
AC_SUBST(POCOLIBS_CFLAGS)
AC_SUBST(POCOLIBS_LIBS)

dnl GenoM
PKG_CHECK_MODULES(GENOM, genom >= @GENOM_MAJOR@.@GENOM_MINOR@ pocolibs >= 2.0)
AC_SUBST(GENOM_CFLAGS)
AC_SUBST(GENOM_LIBS)

dnl Tcl
ifelse([$genTcl$], [yes], [ROBOT_LIB_TCL(@TCL_CONFIG_PATH@)], [])
ifelse([$genOpenprs$], [yes], [
	PKG_CHECK_MODULES(TRANSGEN, transgen)
	PKG_CHECK_MODULES(OPENPRS, openprs)
        AC_CONFIG_FILES([$module$-oprs.pc])
	], [])

dnl --- Check for extra software ----------------------------------------

AC_ARG_WITH(includes,
   AC_HELP_STRING([--with-includes=string], [extra includes list for codels]),
   [
      if test "x$withval" != "xno" -a "x$withval" != "x"; then
         EXTRA_INCLUDES="$withval"
      fi
   ], [EXTRA_INCLUDES=])
AC_SUBST(EXTRA_INCLUDES)

AC_ARG_WITH(libraries,
   AC_HELP_STRING([--with-libraries=string], [extra libraries list for codels]),
   [
      if test "x$withval" != "xno" -a "x$withval" != "x"; then
         EXTRA_LIBS="$withval"
      fi
   ], [EXTRA_LIBS=])
AC_SUBST(EXTRA_LIBS)

$genomPackages$

dnl ============ Include the user part
m4_include([configure.ac.user])
dnl ============ Include the user part (end)

AC_SUBST(EXTRA_SUBDIRS)
AC_SUBST(EXTRA_PKGCONFIG)

AC_CONFIG_FILES(
	[config.mk:autoconf/config.mk.in]
	[Makefile]
	[codels/Makefile]
	[server/Makefile]
	[$module$.pc]
	[local.mk:autoconf/local.mk.in]
)

for dir in $EXTRA_SUBDIRS; do
    AC_CONFIG_FILES([$dir/Makefile])
done
for pc in $EXTRA_PKGCONFIG; do
    AC_CONFIG_FILES([$pc.pc])
done

AC_OUTPUT

