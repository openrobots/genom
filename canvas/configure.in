dnl	$LAAS$
dnl
dnl configure.in --
dnl	process this file with autoconf to produce a configure script.
dnl
AC_REVISION($LAAS$)

AC_INIT(server/$module$Header.h)
AC_CONFIG_AUX_DIR(autoconf)
dnl AC_CONFIG_HEADER(../config.h)

AC_CANONICAL_HOST

dnl --- checks for programs ---------------------------------------------
dnl
ROBOT_CFLAGS
ROBOT_PROG_MKDEP

AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl Checks for headers --------------------------------------------------
dnl
AC_CHECK_HEADERS(sys/cdefs.h)

AC_C_BIGENDIAN([ENDIANNESS=-DWORDS_BIGENDIAN], [ENDIANNESS=])
AC_SUBST(ENDIANNESS)


dnl --- RTAI support ----------------------------------------------------
dnl
# AC_CHECK_RTAI_INCLUDES(var, path)
AC_DEFUN([AC_CHECK_RTAI_INCLUDES],
[
   AC_MSG_CHECKING([for RTAI includes])
   AC_CACHE_VAL(ac_cv_path_rtai,
    [
       IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
        ac_tmppath="$2:/usr/realtime/include:/usr/src/rtai/include"
        for ac_dir in $ac_tmppath; do 
            test -z "$ac_dir" && ac_dir=.
            if eval test -f $ac_dir/rtai.h; then
               eval ac_cv_path_rtai="$ac_dir"
               break
            fi
       done
       IFS="$ac_save_ifs"
    ])
   $1="$ac_cv_path_rtai"
   if test -n "[$]$1"; then
      AC_MSG_RESULT([$]$1)
   else
      AC_MSG_ERROR([cannot find RTAI includes], 2)
   fi
   AC_SUBST($1)
])

# configure options
AC_ARG_WITH(rtai,
           AC_HELP_STRING([--with-rtai=yes|no],
               [configure to use RTAI]),
           [opt_rtai=$withval],[opt_rtai=no])
AC_ARG_WITH(rtai-includes,
           AC_HELP_STRING([--with-rtai-includes=DIR],
               [RTAI headers are in DIR]),
           [opt_rtai_includes=$withval])

# make related stuff
if test "x$opt_rtai" = "xyes"; then
   OSAPI=rtai
   AC_MSG_RESULT([Configuring to use RTAI])
   AC_CHECK_RTAI_INCLUDES(RTAI_INC, $opt_rtai_includes)

elif test "x$opt_rtai" = "xno"; then :
   OSAPI=posix
   AC_MSG_RESULT([Configuring to use POSIX])
else
   AC_MSG_ERROR([invalid option --with-rtai=$opt_rtai], 2)
fi
AC_SUBST(OSAPI)


dnl --- checks for functions --------------------------------------------
dnl

LIBS=

dnl AC_CHECK_PTHREADS

dnl AC_SEARCH_LIBS(socket, [socket], [],
dnl 	  [AC_MSG_ERROR([socket() not found])], [-lnsl])
dnl AC_SEARCH_LIBS(socket, [nsl], [],
dnl 	  [AC_MSG_ERROR([socket() not found])], [])
dnl AC_SEARCH_LIBS(clnt_create, [nsl], [],
dnl 	  [AC_MSG_ERROR([clnt_create() not found])], [])
dnl AC_SEARCH_LIBS(gethostbyname, [nsl], [],
dnl         [AC_MSG_ERROR([gethostbyname() not found])], [])
dnl AC_SEARCH_LIBS(sem_init, [rt], [],
dnl         [AC_MSG_ERROR([sem_init() not found])], [])
dnl AC_SEARCH_LIBS(dlopen, [dl], [],
dnl         [AC_MSG_ERROR([dlopen() not found])], [])
dnl AC_SEARCH_LIBS([timer_create], [rt], [],
dnl         [AC_MSG_ERROR([timer_create() not found])], [])

dnl AC_SEARCH_LIBS([fabs], [m])
dnl AC_SEARCH_LIBS([atan], [m])

AC_SUBST(OS_LIBS, "${LIBS}")


dnl --- checks for libraries --------------------------------------------
dnl

dnl genom
AC_ARG_WITH(genom,
           AC_HELP_STRING([--with-genom=DIR],
               [genom is installed in DIR (prefix)]),
           [opt_genom=$withval],[opt_genom=NONE])
AC_ARG_WITH(genom-exec-prefix,
           AC_HELP_STRING([--with-genom-exec-prefix=DIR],
               [genom library is installed in DIR (exec-prefix)]),
           [opt_genom_eprefix=$withval],[opt_genom_eprefix=NONE])


genom_path_lib=$opt_genom_eprefix/lib:$opt_genom/lib
if test "x${cross_compiling}" = "xyes"; then
   genom_path_lib=$genom_path_lib:$libdir:$prefix/lib
else
   genom_path_lib=$genom_path_lib:`$genomBin$ --libraries`
fi
genom_path_lib=$genom_path_lib:/usr/local/lib:/usr/lib

ROBOT_PATH_INC([genom], GENOM_INCDIR, [genom/modules.h],
	[AC_MSG_ERROR([please use --with-genom option.])],
	[$opt_genom/include:`$genomBin$ --includes`:/usr/local/include:/usr/include])

ROBOT_PATH_LIB([genom], GENOM_LIBDIR, [genom], [h2GetEvnStateString],
	[AC_MSG_ERROR([please use --with-genom option.])],
	[$genom_path_lib])


dnl portLib
AC_ARG_WITH(pocolibs,
           AC_HELP_STRING([--with-pocolibs=DIR],
               [pocolibs are installed in DIR (prefix)]),
           [opt_pocolibs=$withval],[opt_pocolibs=NONE])

ROBOT_PATH_INC([pocolibs], POCOLIBS_INCDIR, [portLib.h],
	[AC_MSG_ERROR([please use --with-pocolibs option.])],
	[$opt_pocolibs/include:`$genomBin$ --includes`:/usr/local/include:/usr/include])


dnl tcl
if test "x$genTcl$" = "xyes"; then
   ROBOT_LIB_TCL
fi


dnl --- Check for extra software ----------------------------------------

AC_ARG_WITH(includes,
   AC_HELP_STRING([--with-includes=string], [extra includes list for codels]),
   [
      if test "x$withval" != "xno" -a "x$withval" != "x"; then
         EXTRA_INCLUDES="$withval"
      fi
   ], [EXTRA_INCLUDES=])
AC_SUBST(EXTRA_INCLUDES)

AC_ARG_WITH(libraries,
   AC_HELP_STRING([--with-libraries=string], [extra libraries list for codels]),
   [
      if test "x$withval" != "xno" -a "x$withval" != "x"; then
         EXTRA_LIBS="$withval"
      fi
   ], [EXTRA_LIBS=])
AC_SUBST(EXTRA_LIBS)


dnl --- create Makefiles ------------------------------------------------
dnl
CFLAGS="${C_DEBUG_FLAGS} ${C_WARNING_FLAGS}"

GENOM_INC="-I${GENOM_INCDIR}"
GENOM_LIB="-L${GENOM_LIBDIR} -R${GENOM_LIBDIR} -lgenom"
AC_SUBST(GENOM_INC)
AC_SUBST(GENOM_LIB)

POCOLIBS_INC="-I${POCOLIBS_INCDIR}"
AC_SUBST(POCOLIBS_INC)

AC_CONFIG_FILES(
	[config.mk:autoconf/config.mk.in]
	[Makefile]
	[codels/Makefile]
	[server/Makefile]
)
AC_OUTPUT
